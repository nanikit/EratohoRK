eratohoReverse0. 60 구상 시스템 개요 제 0판


0. 처음에
이 텍스트 파일은 eratohoReverse0. 60의 구상 시스템에 대해 개요를 해설하는 것을 목적으로 한다.
어느 쪽인가 하면 바리안트측으로부터 구상 시스템을 보는 설명이 되어 있다.
상정되는 주된 독자는, 패치 작자, 파생 바리안트 작자, 코드의 읽을 수 있는 디버거의 (분)편이다.
그 때문에, 구상 작자에게는 이해하기 어려운 점이 많이 있을지도 모르지만, 이해해 손해는 없다고 생각한다.
또, 나의 일본어가 약간 이해하기 어려운 것은 사양이다.
내용의 정확성에 대해서는 유감스럽지만 보증되지 않는다. 나쁘게 생각하지 마시고.


----------------------------------------------------------------------------------------------------

1. 구상의 종류에 대해
구상의 호출측에서 보는 구상의 종류는 이하와 같다.
      <구상의 종류>          <호출 타이밍>
    ·액션 구상        조교자 행동시
    ·조수 액션 구상    조수 행동시
    ·탈의 액션 구상    탈의 행동시
    ·이벤트 구상          각종 이벤트 발생시
    ·조수 이벤트 구상      조수의 각종 이벤트 발생시
    ·각인 취득 구상          조교 대상의 각인 취득시
    ·리액션 구상      조교 대상의 반응 후
    ·미약등 사용 구상        미약/로션등 사용시
구상측에서 보는 구상 종류와는 반드시 일치하지 않는다. 차장에서 상세한 비교를 실시한다.

----------------------------------------------------------------------------------------------------

2. 구상을 호출하는 함수라고 실제로 불리는 구상의 함수에 대해
이하에 구상의 종류와 호출을 위한 함수, 실제로 불리는 구상의 함수의 대응을 나타낸다.
      <구상의 종류>          <호출 함수>          <구상 함수>
    ·액션 구상        @KOJO_ACT           @KOJO_ACT_KX1_Y1
    ·조수 액션 구상    @KOJO_ACT_ASSI      @KOJO_ACT_ASSI_KX1_Y1
    ·탈의 액션 구상    @KOJO_DATUI         @KOJO_DATUI_KX1
                                                @KOJO_DATUI_ASSI_KX1
    ·이벤트 구상          @KOJO_EVENT         @KOJO_EVENT_KX1_Y1
    ·조수 이벤트 구상      @KOJO_EVENT_ASSI    @KOJO_EVENT_ASSI_KX1_Y1
    ·각인 취득 구상          @KOJO_MARK          @KOJO_MARK_KX1
    ·리액션 구상      @KOJO_REACT         @KOJO_REACT_KX1_Y1
                                                @KOJO_COM_KX1_Y1
    ·미약등 사용 구상        @KOJO_USE           @KOJO_USE_KX1
호출측은 직접 구상 함수를 CALL 하는 일은 없고, 호출 함수를 CALL 하는 것으로 간접적으로 구상 함수를 부른다.
호출 함수는 EVENT_K.ERB에서 정의된다. 또, 구상 함수는 각 구상 파일에서 정의된다.
호출측으로부터 의식할 필요는 없지만, 호출 함수로부터 구상 함수를 호출하는 처리에는 이제(벌써) 1 쿠션 있다.
대상 한정 구상에서는 구상 함수의 이름이 달라, 그것을 불러 나누는 층이다. 이 해설은 나중에 실시한다.
이하로는, 각 구상 마다의보다 자세한 해설을 실시한다.


2-1. 액션 구상
조교에 대해 조교자 행동을 할 때에 표시되는 구상이다.
호출할 때는 이하의 함수를 사용한다.
    @KOJO_ACT
이 함수로부터 불리는 구상 함수는
    @KOJO_ACT_KX1_Y1
이다. X1에는 조교자의 캐릭터 번호, Y1에는 조교자 행동 번호가 들어간다.
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 구상을 표시하지 않았던 것을 나타낸다
    1… 구상을 표시한 것을 나타낸다
    2… 약품 사용을 포함한 액션 구상을 표시했기 때문에, @KOJO_USE를 부를 필요가 없는 것을 나타낸다


2-2. 조수 액션 구상
조교에 대해 조수 행동을 할 때에 표시되는 구상이다.
호출할 때는 이하의 함수를 사용한다.
    @KOJO_ACT_ASSI
이 함수로부터 불리는 구상 함수는
    @KOJO_ACT_ASSI_KX1_Y1
이다. X1에는 조수의 캐릭터 번호, Y1에는 조수 행동 번호가 들어간다.
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 구상을 표시하지 않았던 것을 나타낸다
    1… 구상을 표시한 것을 나타낸다


2-3. 탈의 액션 구상
조교에 대해 탈의 행동을 할 때에 표시되는 구상이다.
호출할 때는 이하의 함수를 사용한다.
    @KOJO_DATUI
이 함수로부터 불리는 구상 함수는
    @KOJO_DATUI_KX1			탈의 구상
    @KOJO_DATUI_ASSI_KX1	탈의 서포트 구상
의 2종류 존재한다.
@KOJO_DATUI_KX1의 X1에는 조교자의 캐릭터 번호, @KOJO_DATUI_ASSI_KX1의 X1에는 조수의 캐릭터 번호가 들어간다.
통상, 조교자가 조교 대상을 벗게 했을 경우는@KOJO_DATUI_KX1(탈의 구상)가 불려
조수가 조교 대상을 벗게 했을 경우는@KOJO_DATUI_ASSI_KX1(탈의 서포트 구상)가 불린다.
다만, 조수가<마스터>의 경우는 이것이 반전한다. 이 때, 일시적으로 TARGET와 ASSI의 값이 바뀐다.
그 때문에, @KOJO_DATUI_KX1 함수내에서는 구상주는 항상 TARGET이며,
@KOJO_DATUI_ASSI_KX1 함수내에서는 구상주는 항상 ASSI인 것은 보증된다.
조교자 자신이 벗는 경우는, @KOJO_DATUI_KX1(탈의 구상)가 불린다.
다만, 조교자가 조교 대상을 벗게 하고 있는 경우는 불리지 않는다.
(이미 조교자의 탈의 구상/탈의 서포트를 부르고 있기 (위해)때문에, 재차 부르지는 않는다)
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 구상을 표시하지 않았던 것을 나타낸다
    1… 구상을 표시한 것을 나타낸다
여담이지만, 구상측에서 어느 쪽인가의 한편의 탈의 구상을 기술했음에도 관련되지 않고,
그것이 표시되지 않았던 경우는<마스터>의 존재를 의심해 볼 필요가 있다.
예를 들면 구상주가<마스터>라고,@KOJO_DATUI_ASSI_KX1(탈의 서포트 구상)가 불리는 일은 없다.
구상 작자도 바리안트 작자도, 이 사양을 머리의 한쪽 구석에 넣어 두어 손해는 없다.


    --변수 TEQUIP는 캐릭터 변수?! --
    TEQUIP는 본래 캐릭터 변수인 것으로, TEQUIP:MASTER:1과 같은 기술이 가능하다.
    다만, eratohoReverse에서는 TEQUIP:1과 같은 기술 밖에 사용되지 않았다.
    이것은 TEQUIP:TARGET:1의 생략형이며, MASTER의 의상이라고 하는 본래 MASTER가 관리해야 할 정보도
    모두 TARGET에 의해 관리되고 있다. 이 일은 통상 그다지 문제가 되지 않지만,
    탈의 액션 구상과 같이 일시적으로 TARGET의 값이 바뀌는 것 같은 케이스에서는,
    TEQUIP:1과 같은 기술은 정상적인 값을 참조 할 수 없게 되어 버린다.
    이 근처의 처리에 손볼 때는, 상기의 일을 이해해 둘 필요가 있다.
    ※eratohoReverse에서는 TARGET-ASSI 교체의 함수가 있어, 거기서 필요한 변수를 포함한 교체 처리를 실시하고 있다


2-4. 이벤트 구상
각종 이벤트 시에 표시되는 구상이다.
호출할 때는 이하의 함수를 사용한다.
    @KOJO_EVENT(ARG, ARG:1, ARG:2)
인수의 내용은 이하와 같다.
    ARG  … 이벤트 번호
    ARG:1… 이벤트 파생 번호. 파생이 없는 것에 대해서는, 생략 해도 괜찮다
    ARG:2… 구상을 호출하는 캐릭터 등록 번호. 생략 했을 경우는 TARGET
이 함수로부터 불리는 구상 함수는
    @KOJO_EVENT_KX1_Y1(ARG)
이다. X1에는 캐릭터 번호(NO:(ARG:2)), Y1에는 이벤트 번호(ARG)가 들어간다.
또, 인수 ARG로서 이벤트 파생 번호(ARG:1)가 건네받는다.
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 구상을 표시하지 않았던 것을 나타낸다
    1… 구상을 표시하고 있어, 호출측에서 DRAWLINE가 필요한 것을 나타낸다
    2… 구상을 표시하고 있어, 호출측에서 개행이 필요한 것을 나타낸다
    3… 구상을 표시하고 있어, 호출측에서 DRAWLINE와 개행의 양쪽 모두가 필요한 것을 나타낸다


2-5. 조수 이벤트 구상
조수에 관한 각종 이벤트 시에 표시되는 구상이다.
호출할 때는 이하의 함수를 사용한다.
    @KOJO_EVENT_ASSI(ARG, ARG:1)
인수의 내용은 이하와 같다.
    ARG  … 이벤트 번호
    ARG:1… 이벤트 파생 번호. 파생이 없는 것에 대해서는, 생략 해도 괜찮다
이 함수로부터 불리는 구상 함수는
    @KOJO_EVENT_ASSI_KX1_Y1(ARG)
이다. X1에는 조수의 캐릭터 번호(NO:ASSI), Y1에는 이벤트 번호(ARG)가 들어간다.
또, 인수 ARG로서 이벤트 파생 번호(ARG:1)가 건네받는다.
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 구상을 표시하지 않았던 것을 나타낸다
    1… 구상을 표시하고 있어, 호출측에서 DRAWLINE가 필요한 것을 나타낸다
    2… 구상을 표시하고 있어, 호출측에서 개행이 필요한 것을 나타낸다
    3… 구상을 표시하고 있어, 호출측에서 DRAWLINE와 개행의 양쪽 모두가 필요한 것을 나타낸다


2-6. 각인 취득 구상
조교 대상이 각인을 취득했을 때에 표시되는 구상이다.
호출할 때는 이하의 함수를 사용한다.
    @KOJO_MARK(ARG, ARG:1, ARG:2, ARG:3, ARG:4)
인수의 내용은 이하와 같다.
    ARG  … 취득한 고통 각인의 레벨. 취득하고 있지 않는 경우는 0
    ARG:1… 취득한 쾌락 각인의 레벨. 취득하고 있지 않는 경우는 0
    ARG:2… 취득한 굴복 각인의 레벨. 취득하고 있지 않는 경우는 0
    ARG:3… 취득한 반항 각인의 레벨. 취득하고 있지 않는 경우는 0
    ARG:4… 취득한 트라우마의 레벨. 취득하고 있지 않는 경우는 0
이 함수로부터 불리는 구상 함수는
    @KOJO_MARK_KX1(ARG, ARG:1, ARG:2, ARG:3, ARG:4)
이다. X1에는 조교자의 캐릭터 번호가 들어간다.
또, 인수 ARG~ARG:4에는@KOJO_MARK에게 건네진 인수가 그대로 건네받는다.
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 구상을 표시하지 않았던 것을 나타낸다
    1… 구상을 표시한 것을 나타낸다


2-7. 리액션 구상
조교 대상의 반응에 응해 표시되는 구상이다.
호출할 때는 이하의 함수를 사용한다.
    @KOJO_REACT
이 함수로부터 불리는 구상 함수는
    @KOJO_REACT_KX1_Y1  조교자 행동별로 정의되는, 개별 리액션
    @KOJO_COM_KX1_Y1    조교 대상의 반응별로 정의되는, 범용 리액션
의 2종류 존재한다.
@KOJO_REACT_KX1_Y1의 X1에는 조교자의 캐릭터 번호, Y1에는 조교자 행동 번호(TFLAG:90)가 들어간다.
@KOJO_COM_KX1_Y1의 X1에는 조교자의 캐릭터 번호, Y1에는 조교 대상의 반응 번호(SELECTCOM)가 들어간다.
이 함수는 우선, @KOJO_REACT_KX1_Y1의 호출을 시도한다.
이것에 의해 구상이 표시되지 않았던 경우, @KOJO_COM_KX1_Y1를 호출한다.
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 어느 구상도 표시하지 않았던 것을 나타낸다
    1… 구상을 표시한 것을 나타낸다


2-8. 미약등 사용 구상
조교자에 의해 미약이나 로션등이 사용되었을 때에 표시되는 구상이다.
(조수가 이것들을 사용하는 경우는, 조수 액션 구상을 이용한다)
호출할 때는 이하의 함수를 사용한다.
    @KOJO_USE
이 함수의 호출에 즈음해, 액션 구상의 호출 결과를 참조할 필요가 있다.
이 함수로부터 불리는 구상 함수는
    @KOJO_USE_KX1
이다. X1에는 조교자의 캐릭터 번호가 들어간다.
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 어느 구상도 표시하지 않았던 것을 나타낸다
    1… 구상을 표시한 것을 나타낸다

----------------------------------------------------------------------------------------------------

3. 대상 한정 구상의 호출과 구상 호출의 배타적 연산에 대해
※시스템의 대범한 움직임을 이해할 뿐(만큼)이라면 본장을 읽어 날려도 상관없다
호출 함수로부터 구상 함수가 불릴 때에 1 쿠션 있으면 전술했지만, EVENT_K.ERB의@KOJO_CALL가 그래서 있다.
이 함수에서는, 대상 한정 구상의 호출이나 구상 호출의 배타적 연산에 관한 처리를 실시한다.


3-1. 대상 한정 구상의 종류
대상 한정 구상이란, 구상의 적용 범위로서 조교 대상(MASTER)을 특정 조건하로 한정하는 타입의 구상이다.
MASTER가 조건에 들어맞지 않는 경우, 그 입상은 불리지 않는다.
한정에는 이하의 종류가 있다.
        <한정 계통>  <한정의 종류>    <접두어>    <호출 조건>
    고  캐릭터 한정  남자 당신    MALEYOU     조교 대상이 당신으로, 소질[남자]가 있다
                    후타나리 당신  TWINYOU     조교 대상이 당신으로, 소질[후타나리]가 있다
    ↑              페니스부 당신  PENISYOU    조교 대상이 당신으로, 소질[남자][후타나리]중 한쪽이 있다
    스구루              녀 당신        FEMALEYOU   조교 대상이 당신으로, 소질[남자]가 없다
    처              지정 캐릭터 한정  NO_KX1      조교 대상이 지정의 캐릭터
    순서  성별 한정    남자 한정      MALE        조교 대상으로 소질[남자]가 있다
    정도              후타나리 한정    TWIN        조교 대상으로 소질[후타나리]가 있다
    ↓              페니스부 한정    PENIS       조교 대상으로 소질[남자][후타나리]중 한쪽이 있다
                    녀 한정          FEMALE      조교 대상으로 소질[남자]가 없다
    저  한정 없음    통상            (없음)      조건 없음
이하는 구체적인 예이다(액션 구상)
    남자 당신 한정            @KOJO_MALEYOU_ACT_KX1_Y1
    당신 한정(지정 캐릭터 한정)  @KOJO_NO0_ACT_KX1_Y1
    녀 한정                      @KOJO_FEMALE_ACT_KX1_Y1
    한정 없음                    @KOJO_ACT_KX1_Y1
덧붙여 X1에는 조교자의 캐릭터 번호, Y1에는 조교자 행동 번호가 들어간다.


3-2. 함수@KOJO_CALL의 개요
@KOJO_CALL는 각 호출 함수로부터, 실제의 구상 함수를 부르기 위해서(때문에) CALL 된다.
실제의 구상 함수는 여기로부터 CALL 된다. (엄밀하게는 TRYCALLFORM 명령을 이용해 호출을 시도하고 있다, 라고 하는 것이 올바르다)
인수의 내용은 이하와 같다.
    ARGS … 호출하는 구상 함수명의 후반 부분
    ARG  … 구상주의 등록 번호. 생략 되었을 경우는 TARGET
    ARG:1… 호출하는 구상 함수의 인수의 수
    ARG:2… 호출하는 구상 함수에 건네주는 인수 1
    ARG:3…          〃          인수 2
    ARG:4…          〃          인수 3
    ARG:5…          〃          인수 4
    ARG:6…          〃          인수 5
현상, 구상 함수의 인수의 수는 0/1/5의 언젠가이다.
반환값 RESULT는, 구상을 표시했는가 어떤가를 나타내는 값이다.
    0… 어느 구상도 표시하지 않았던 것을 나타낸다
    1… 구상을 표시한 것을 나타낸다


3-3. 함수@KOJO_CALL의 처리의 흐르고(개요)
    1. 캐릭터 한정의 구상의 호출을 시도한다
    2. 배타적 연산 1(캐릭터 한정 구상과 그 외의 구상간의 부정합을 막는다)
    3. 성별 한정의 구상의 호출을 시도한다
    4. 배타적 연산 2(성별 한정 구상과 통상의 구상간의 부정합을 막는다)
    5. 통상의 구상(한정 없음)의 호출을 시도한다


3-4. 배타 시스템의 움직임
배타 시스템이란, 구상을 공존시켰을 경우에 무례한 구상 보완을 막는 구조이다.
어느 캐릭터에 대해, 통상의 구상을 포함해, 각종의 한정 구상을 공존시키는 것이 가능하다.
그 때, 한정 구상으로 미정도리의 구상에 관해서는 통상의 구상(혹은 한정의 느슨한 다른 한정 구상)에 의해 보완된다.
하지만, 그 때에 문제가 되는 것이 구상간의 정합성이다.
정합성 여하에 따라서는, 보완하지 않는 것이 마시라고 하는 케이스도 생각할 수 있다.
배타 지정되었을 경우, 계통이 달라 우선도가 낮은 구상의 호출을 스킵 한다.
계통이 같은 경우는 배타 하는 것은 할 수 없다.
배타를 실시할지 어떨지의 지정은, 구상 함수@KOJO_Y1_EXCLUSION_KX1에서 행해진다.
X1에는 캐릭터 번호, Y1에는 한정 종별마다의 접두어가 들어간다.
덧붙여 디폴트에서는 배타는 가지 않았다.
구상 작자는, 구상이 보완된다/보완에 이용되는 케이스가 있다고 하는 일을 머리의 한쪽 구석에 넣어 두면 좋다.
(다만, 보완에 이용되는 전제로 구상을 쓴다는 것은 큰 일일지도 모르기 때문에 적당히)
한정 구상을 쓰려고 생각하고 있는 구상 작자는, 이러한 보완/배타 기능도 있다고 하는 일을 알아 두면 좋다.


3-5. 통계
즉, 이런 느낌입니다.
…─┬─┬─…
  바리안트  │    구상 시스템    │구상 파일
  바리안트의 함수→호출 함수→@KOJO_CALL→구상 함수    
              │                    │            
…─┴─┴─…
혹은, 이런 느낌             /
                                   /    ＼
                                 /구상 함수＼
                               /            ＼
                             /@KOJO_DATUI_KX1 ＼
                           /@KOJO_DATUI_ASSI_KX1＼
                         /@KOJO_EVENT_ASSI_KX1_Y1 ＼           구상 파일
                       /@KOJO_USE_KX1 @KOJO_MARK_KX1＼
                     /     @KOJO_ACT_ASSI_KX1_Y1      ＼
                   /@KOJO_COM_KX1_Y1 @KOJO_EVENT_KX1_Y1 ＼
                 /  @KOJO_ACT_KX1_Y1 @KOJO_REACT_KX1_Y1   ＼
               /
             /                   @KOJO_CALL                   ＼
           /    구상
         /                        호출 함수                        ＼  시스템
       /     @KOJO_ACT @KOJO_ACT_ASSI @KOJO_DATUI @KOJO_EVENT       ＼
     /       @KOJO_EVENT_ASSI @KOJO_MARK @KOJO_REACT @KOJO_USE        ＼
   /
 /                               바리안트                               ＼
~

----------------------------------------------------------------------------------------------------

4. 구상의 문자색과 표시 자리에 위치해
※시스템의 대범한 움직임을 이해할 뿐(만큼)이라면 본장을 읽어 날려도 상관없다
구상의 문자색은 구상 함수@KOJO_COLOR_KX1로 지정된다.
덧붙여 이 함수는 캐릭터를 통해서 단일이다. 한정 구상마다 색이 다르면, 정합성이 잡히지 않게 되기 (위해)때문이다.
이것은 각 호출 함수로부터, @KOJO_COLOR를 통해서 불려 간다.
직접 호출하는 일은 없기 때문에, 그다지 주의할 필요는 없을 것이다.
다만, 각 호출 함수에서 RESETCOLOR 명령이 사용되고 있는 것은 의식해야 할 포인트일지도 모른다.
구상 작자에게는 색지정을 실시하는 것을 추천 하고 싶다. 디폴트로 사용되는 구상색은 수수한 회색이다.
표시 자리에 위치해는, 조수의 구상은 오른쪽맞춤이 되도록(듯이) 만들어지고 있다.
호출에 즈음해 주의하는 점은 없지만, 바리안트측에서 지문 따위를 기술할 때는 주의가 필요할지도 모른다.
구상 작자는, 조수 구상을 쓸 때에 즉시가 발생하지 않게 배려할 필요가 있을지도 모른다.
오른쪽맞춤으로 되풀이하면 보기에 좋지 않은 경우가 많아, 개행하는 것이 좋은 결과를 얻을 수 있도록(듯이) 생각한다.

----------------------------------------------------------------------------------------------------

5. 끝에
의 사람에게… 만약 보고 있으면, 마음대로 이상한 써 미안해요. 잘못되어 있으면 좀 더 미안해요.
좀 더 Reverse계의 저변이 퍼지면 좋겠네요.
그렇게 되면, 서로 노하우든지 패치든지를 교환하거나 할 수 있을지도.


문책/eratohoReverse의 통계 패치 만들거나 수정 패치 만들거나 한 사람
      혹은 eraSQ 스레 7의 ID:yKFvr4bA


양말, 맛있어. 득도함님, 너무 좋아