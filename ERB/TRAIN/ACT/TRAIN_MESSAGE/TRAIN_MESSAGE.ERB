;────────────────────────────────────
;조교자 행동 지문(리액션전)
;
;조교자 행동이 정해지면 여기로부터 지문을 호출합니다.
;구상으로 지정하는 것에 의해 치환한 문장을 표시해 불리지 않도록 할 수가 있습니다.
;────────────────────────────────────
@TRAIN_MESSAGE
CALL KOJO_TRAIN_MESSAGE
IF !RESULT
	IF TFLAG:SP행동 >= 200
		CALL SP_TRAIN_MESSAGE
	ELSE
		TRYCCALLFORM TRAIN_MESSAGE_{TFLAG:ACT}
		CATCH
			RETURN 0
		ENDCATCH
	ENDIF
	WAIT
ENDIF
RETURN RESULT

;────────────────────────────────────
;조교 대상 행동 지문(리액션 후)
;
;조교 대상 리액션이 정해지면 여기로부터 메세지를 호출합니다.
;구상으로 지정하는 것에 의해 치환한 문장을 표시해 불리지 않도록 할 수가 있습니다.
;────────────────────────────────────
@TRAIN_MESSAGE2
;COM가 우선 REACT 때는 처리하지 않고 되돌린다. ACT가 방치플레이/쉬게한다/영양제를먹인다라면 통한다@/L
SIF IS_NOWCOMNAME("하는대로") && !IS_NOWACTNAME("방치플레이/쉬게한다/영양제를먹인다")
	RETURN 0
CALL KOJO_TRAIN_MESSAGE2
IF !RESULT
	;SHOW_USERCOM_COM에 툴 팁이 가르쳐졌으므로 봉인. 여기서 REACT파생를 표시하도록(듯이)해도 되는 것인지도 모른다
	;IF ! IS_NOWCOMNAME("하는대로")					;COM:하는대로라면 연주한다
	;	PRINTFORML [%COM_RANK(TFLAG:REACT부하)%]
	;	PRINTL
	;ENDIF
	;조교 항목 마다의 지문을 호출해
	TRYCCALLFORM TRAIN_MESSAGE2_{TFLAG:ACT}
		RETURN RESULT
	CATCH
		RETURN 0
	ENDCATCH
ENDIF
RETURN RESULT

;────────────────────────────────────
;리액션 후의 탈의 애니메이션 표시
;────────────────────────────────────
@TRAIN_MESSAGE2_5_ANIME
;의상 변경이 아닌 경우는 돌아온다
SIF !IS_NOWACTNAME("의상의변경을요구한다") || !IS_COMGRONAME("소극적으로 한다/태연하게 한다/적극적으로 한다")
	RETURN RESULT
PRINTL
;옷을 벗었을 경우
IF TFLAG:ACT파생 == 0 && IS_COMGRONAME("소극적으로 한다/태연하게 한다/적극적으로 한다")
	;조교 대상 복장의 표시
	CALL CLOTHE_SHOW(MASTER)
;옷을 입었을 경우
ELSEIF  TFLAG:ACT파생 && IS_COMGRONAME("소극적으로 한다/태연하게 한다/적극적으로 한다")
	;조교 대상 복장의 표시
	CALL CLOTHE_SHOW(MASTER, 1)
ENDIF
RETURN RESULT

;────────────────────────────────────
;조교자 행동 지문(행동마다)
;
;리액션전, 리액션 후의 지문을 1개소에 정리했다
;REACTION 후, RESULT치가 1이외의 경우는 REACTION_MESSAGE도 불려 간다
;────────────────────────────────────
;ACT분류 마다 파일을 분리. 개별의 파일은 ACT_MESSAGE 폴더에 이전@/L
