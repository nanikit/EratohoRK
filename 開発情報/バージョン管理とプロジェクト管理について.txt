처음에
**************************************************
당바리안트는 버젼 관리를 Bazaar, 프로젝트 관리를 Launchpad로 가고 있습니다
Launchpad에서는 Project_Reverse로서 활동하고 있습니다
프로젝트의 URL는 이쪽 => https://launchpad.net/eratohoreverse
리포지터리(repository)도 공개하고 있어, 언제라도 최신의 소스를 보실 수 있습니다
바그트락카나, 그 외의 정보도 공개하고 있습니다


Bazaar에 대해
**************************************************
여기에서는 버전 콘트롤 시스템을 사용했던 적이 없는 사람에게, 그 기본적인 사용법을 해설할 수 없습니다
온전히 하면 책을 쓸 수 있는 레벨이 되어 버리므로, 개요에 고정하도록 해 받습니다

Bazaar는 분산형 버전 콘트롤 시스템(DVCS)입니다
관리하에 있는 디렉토리(리포지터리(repository)) 내의 이력과 차분을 보존합니다
이력은 리버젼으로서 관리되어 이력을 등록(이것을 위탁이라고 말합니다) 할 때에 리버젼은 증가해 갑니다
어느 위탁에 문제 있어, 라고 하는 경우는 간단하게 과거의 리버젼에 되감는 것이 가능합니다
WinMerge와 같은 차분 확인 툴 + 차분, 이력의 보존, 권반환이 가능한 것. 그렇다고 하는 간입니다
같은 관리하에 있는 리포지터리(repository)로부터 분기한 것 같은 종류에서의 머지 작업은 매우 간단
머지가 간단한 점에 대해서는,WinMerge와 같은 머지 툴이라고 비교가 되지 않습니다
수고가 걸리는 수작업이 많은 것을 자동화할 수가 있습니다

위탁시에는 『~를 수정』등과 로그를 보존하는 것이 가능하고, 나중에 이력을 거슬러 올라가는 경우에 편리합니다
문제가 발생했을 경우, 그 원인이 되는 처리가 추가된 것은 어느 시점인 것이나 목표를 붙일 수가 있습니다
수정한 버그를 바그트락카(BTS)와 관련짓는 일도 가능해, 당바리안트의 바그트락카에의 링크가 자동적으로 생성됩니다
당바리안트에서는 후술 하는 Launchpad와 제휴시키고 있어 Bazaar를 준비해 두면 관계자가 아니어도
항상 최신의 소스와 로컬의 환경을 동기 하게 하는 일도 가능합니다

분산형 버전 콘트롤 시스템으로서는 Git가 많이 사용되고 있습니다
그럼 왜 Bazaar인가? 라고 말하면 단지 관계자가 모두 익숙해지고 있다고 할 뿐이었다거나 합니다
Launchpad와의 친화성이라고 하는 의미에서도, 상당한 일이 없는 한 Bazaar에서의 관리라고 하는 체제는 변함없는 것이라고 생각됩니다


Launchpad에 대해
**************************************************
주로 워크플로우의 추적, 관리에 이용됩니다
공개 리포지터리(repository)(https://code.launchpad.net/~reversedevgru/eratohoreverse/trunk)도 설치하고 있어
언제라도 최신의 소스, 차분, 위탁 이력을 열람할 수가 있습니다
Bazaar의 커맨드, pull든지 branch로 로컬에 같은 환경을 구축하는 일도 가능합니다
리포지터리(repository)와 바그트락카, 그 외 각 항목은 링크하고 있어
어디선가 변경이 있으면, 다른 부분에 반영되게 되어 있습니다
소스의 이력으로부터 과거의 버그를 조사하는 일도 매우 간단합니다

현재의 메인 리포지터리(repository)는 lp:eratohoreverse/trunk가 되어 있어, 현재 4명이 위탁권을 소지하고 있습니다
메인 리포지터리(repository) 외에도, 개인의 작업용 브랜치(branch)나 구상용의 브랜치(branch)도 놓여져 있거나 합니다
개발자, 구상 작자가 Launchpad상에 브랜치(branch)를 두는 것은 허가, 라고 하는 것보다 오히려 추천 합니다
Launchpad로부터라면 제삼자에 의한 코드의 리뷰도 용이하고, 필요한 경우는 이쪽에서 메인 리포지터리(repository)에 머지 할 수도 있습니다

바그트락카는 이쪽이 됩니다 https://bugs.launchpad.net/eratohoreverse/+bugs? orderby=-date_last_updated&start=0
기존의 버그 일람이 데이타베이스화해지고 있어 수정의 진행 상황도 확인할 수 있습니다
수정된 버그는 리버젼 마다의 위탁 이력으로부터 URL로 직접 더듬는 것이 가능합니다
Report a bug로부터 버그를 등록할 수가 있어 로그나 패치등의 파일을 첨부하는 일도 할 수 있습니다
다만 이용하려면 Ubuntu one의 어카운트(메일 주소와 유저명을 등록하면 취득할 수 있다)가 필요하게 됩니다

그 외에 개발 공정이나 실장 예정을 본다(경우에 따라서는 등록하는 일도) 일이 생겨 고지등도 가고 있습니다
개발자, 유저 묻지 않고, 가능한 한 많은 사람에게 참가 해 줄 수 있으면, 라고 생각하고 있습니다
